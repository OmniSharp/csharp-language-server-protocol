# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [GitHubActionsSteps (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration GitHubActions_ci --host GitHubActions
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: ci

on:
  push:
    branches:
      - 'master'
      - 'main'
      - 'next'
    tags:
      - 'v*'
    paths-ignore:
      - '.codecov.yml'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - '.gitmodules'
      - '.lintstagedrc.js'
      - '.prettierignore'
      - '.prettierrc'
      - 'LICENSE'
      - 'nukeeper.settings.json'
      - 'omnisharp.json'
      - 'package-lock.json'
      - 'package.json'
      - 'Readme.md'
      - '.github/dependabot.yml'
      - '.github/labels.yml'
      - '.github/release.yml'
      - '.github/renovate.json'
  pull_request:
    branches:
      - 'master'
      - 'main'
      - 'next'
    paths-ignore:
      - '.codecov.yml'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - '.gitmodules'
      - '.lintstagedrc.js'
      - '.prettierignore'
      - '.prettierrc'
      - 'LICENSE'
      - 'nukeeper.settings.json'
      - 'omnisharp.json'
      - 'package-lock.json'
      - 'package.json'
      - 'Readme.md'
      - '.github/dependabot.yml'
      - '.github/labels.yml'
      - '.github/release.yml'
      - '.github/renovate.json'

jobs:
  Build:
    env:
      NUGET_PACKAGES: '${{ github.workspace }}/.nuget/packages'
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3
        with:
          clean: 'false'
          fetch-depth: '0'
      - name: Fetch all history for all tags and branches
        run: |
          git fetch --prune
      - name: NuGet Cache
        uses: actions/cache@v3
        with:
          path: '${{ github.workspace }}/.nuget/packages'
          key: "${{ runner.os }}-nuget-${{ hashFiles('**/Directory.Packages.props') }}-${{ hashFiles('**/Directory.Packages.support.props') }}"
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: 🔨 Use .NET Core 3.1 SDK
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: '3.1.x'
      - name: 🔨 Use .NET Core 6.0 SDK
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: '6.0.x'
      - name: 🎁 dotnet tool restore
        run: |
          dotnet tool restore
      - name: 🎁 Restore
        run: |
          dotnet nuke Restore --skip
      - name: ⚙ Build
        run: |
          dotnet nuke Build --skip
      - name: 🚦 Test
        run: |
          dotnet nuke Test TriggerCodeCoverageReports GenerateCodeCoverageReportCobertura GenerateCodeCoverageBadges GenerateCodeCoverageSummary GenerateCodeCoverageReport --skip
      - name: 📦 Pack
        run: |
          dotnet nuke Pack --skip
      - name: 🐿 Publish Coverage
        uses: codecov/codecov-action@v3
        with:
          name: 'actions-${{ matrix.os }}'
      - name: 🏺 Publish logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: 'logs'
          path: 'artifacts/logs/'
      - name: 🏺 Publish coverage data
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: 'coverage'
          path: 'coverage/'
      - name: 🏺 Publish test data
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: 'test data'
          path: 'artifacts/test/'
      - name: 🏺 Publish NuGet Packages
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: 'nuget'
          path: 'artifacts/nuget/'
      - name: 🏺 Publish Docs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: 'docs'
          path: 'artifacts/docs/'
  Publish:
    needs:
      - Build
    secrets:
      RSG_NUGET_API_KEY: '${{ secrets.RSG_NUGET_API_KEY }}'
      RSG_AZURE_DEVOPS: '${{ secrets.RSG_AZURE_DEVOPS }}'
    uses: RocketSurgeonsGuild/actions/.github/workflows/publish-nuget.yml@v0.3.3
