@using Microsoft.AspNetCore.Html;
@{
	IList<IDocument> events = Model.GetList<IDocument>("Members")
		?.Where(x => x.GetBool("IsResult") && x.GetString("Kind") == "Event")
		.OrderBy(x => x["DisplayName"])
		.ToList();
	if(events.Count > 0)
	{
		<text>
			<h1 id="Events">Events</h1>
			<div class="box">
				<div class="box-body no-padding table-responsive">
					<table class="table table-striped table-hover three-cols">
						<thead>
							<tr>
								<th>Name</th>
								<th>Type</th>
								<th>Summary</th>
							</tr>
						</thead>
						@foreach(IDocument evt in events)
						{
							IDocument type = evt.Get<IDocument>("Type");
							<tr>
								<td>@Context.GetTypeLink(evt, false)</td>
								<td>@(type == null ? new HtmlString(string.Empty) : Context.GetTypeLink(type))</td>
								<td>
									<div>@Html.Raw(evt["Summary"])</div>
									@{
										IDocument containingType = evt.GetDocument(CodeAnalysisKeys.ContainingType);
										if(containingType != Model)
										{
											<div><small><em>Inherited from @Context.GetTypeLink(containingType)</em></small></div>
										}
										if(evt.GetBool(CodeAnalysisKeys.IsStatic))
										{
											<div><small><em>static</em></small></div>
										}
									}
								</td>
							</tr>
						}
					</table>
				</div>
			</div>
		</text>
	}
}