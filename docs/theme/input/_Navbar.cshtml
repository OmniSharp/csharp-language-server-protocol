@{
    List<Tuple<string, string>> pages = new List<Tuple<string, string>>();/*Context
        .Documents[Docs.Pages]
        .Where(x => x.Bool(SamsonKeys.ShowInNavbar, true))
        .Where(x => x.FilePath(Keys.RelativeFilePath)?.FullPath?.StartsWith("index") == (bool?)false)
        .Select(x => Tuple.Create(x.WithoutSettings.String(Keys.Title), Context.GetLink(x)))
        .Where(x => !string.IsNullOrEmpty(x.Item1))
        .OrderBy(x => x.Item1)
        .ToList();*/
    /*if(Documents[Docs.BlogPosts].Any())
    {
        pages.Add(Tuple.Create(Context.String(SamsonKeys.BlogTitle), Context.GetLink(Context.String(DocsKeys.BlogPath))));
    }*/
    if (Outputs.FromPipeline(nameof(Statiq.Docs.Pipelines.Api)).Any())
    {
        pages.Add(Tuple.Create("API", Context.GetLink(Context.GetPath(DocsKeys.ApiPath))));
    }
    foreach(Tuple<string, string> page in pages)
    {
        string active = Context.GetLink(Document).StartsWith(page.Item2) ? "active" : null;
        <li class="@active"><a href="@(page.Item2)">@(page.Item1)</a></li>
    }
}